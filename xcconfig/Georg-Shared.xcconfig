//
// Georg-Shared.xcconfig
//
// Generated by BuildSettingExtractor on 5/6/24
// https://buildsettingextractor.com
//

// Primary App Icon Set Name
// 
// Name of an app icon set for the target's default app icon. The contents will be merged
// into the `Info.plist`.

ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon



// Global Accent Color Name
// 
// The name of a color resource to use as a the target's accent color, used as the
// default tint color on iOS and watchOS, and accent color on macOS.

ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor



// Include All App Icon Assets
// 
// When true, all app icon assets from the target's Asset Catalogs will be included in
// the built product, making the available at runtime for use as alternate app icons.
// When false, only the primary app icon will be included in the built product.

ASSETCATALOG_COMPILER_INCLUDE_ALL_APPICON_ASSETS = YES



// Code Signing Entitlements
// 
// The path to a file specifying code-signing entitlements.

CODE_SIGN_ENTITLEMENTS = src/Georg.entitlements



// Code Signing Identity
// 
// The name, also known as the *common name*, of a valid code-signing certificate in a
// keychain within your keychain path. A missing or invalid certificate will cause a
// build error.

CODE_SIGN_IDENTITY[sdk=macosx*] = Apple Development



// Code Signing Style
// 
// This setting specifies the method used to acquire and locate signing assets. Choose
// `Automatic` to let Xcode automatically create and update profiles, app IDs, and
// certificates. Choose `Manual` to create and update these yourself on the developer
// website.

CODE_SIGN_STYLE = Automatic



// Combine HiDPI Images
// 
// Combines image files at different resolutions into one multi-page TIFF file that is
// HiDPI compliant for macOS 10.7 and later. Only image files in the same directory and
// with the same base name and extension are combined. The file names must conform to the
// naming convention used in HiDPI.

COMBINE_HIDPI_IMAGES = YES



// Current Project Version
// 
// This setting defines the current version of the project. The value must be a integer
// or floating point number, such as `57` or `365.8`.
// 
// When `GENERATE_INFOPLIST_FILE` is enabled, sets the value of the
// [CFBundleVersion](https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundleversion)
// key in the `Info.plist` file to the value of this build setting.

CURRENT_PROJECT_VERSION = 1



// Dead Code Stripping
// 
// Activating this setting causes the `-dead_strip` flag to be passed to `ld(1)` via
// `cc(1)` to turn on dead code stripping.

DEAD_CODE_STRIPPING = YES



// Development Team
// 
// The team ID of a development team to use for signing certificates and provisioning
// profiles.

DEVELOPMENT_TEAM = MYU6NE7WY6



// Enable Hardened Runtime
// 
// Hardened Runtime defends your application by preventing modifications to its code and
// provides fine-grained controls over what can run in your process. Hardening the
// runtime also prevents access to sensitive resources unless your application
// pre-declares its intent to use them, which reduces the attack surface by eliminating
// unnecessary access.  These properties help prevent exploitation of your application
// and this capability is required for your app to be notarized.

ENABLE_HARDENED_RUNTIME = YES



// Generate Info.plist File
// 
// If enabled, automatically generate an Info.plist file with content from build
// settings, and from content in the file pointed to by `INFOPLIST_FILE`, if defined.

GENERATE_INFOPLIST_FILE = YES



// Info.plist File
// 
// The project-relative path to the property list file that contains the `Info.plist`
// information used by bundles. For details on information property list files, see
// [Information Property
// List](https://developer.apple.com/documentation/bundleresources/information_property_list).

INFOPLIST_FILE = src/Info.plist



// Bundle Display Name
// 
// When `GENERATE_INFOPLIST_FILE` is enabled, sets the value of the
// [CFBundleDisplayName](https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundledisplayname)
// key in the `Info.plist` file to the value of this build setting.

INFOPLIST_KEY_CFBundleDisplayName = Georg



// Application Category
// 
// When `GENERATE_INFOPLIST_FILE` is enabled, sets the value of the
// [LSApplicationCategoryType](https://developer.apple.com/documentation/bundleresources/information_property_list/lsapplicationcategorytype)
// key in the `Info.plist` file to the value of this build setting.

INFOPLIST_KEY_LSApplicationCategoryType = public.app-category.utilities



// Copyright (Human-Readable)
// 
// When `GENERATE_INFOPLIST_FILE` is enabled, sets the value of the
// [NSHumanReadableCopyright](https://developer.apple.com/documentation/bundleresources/information_property_list/nshumanreadablecopyright)
// key in the `Info.plist` file to the value of this build setting.

INFOPLIST_KEY_NSHumanReadableCopyright = 



// AppKit Main Storyboard File Base Name
// 
// When `GENERATE_INFOPLIST_FILE` is enabled, sets the value of the
// [NSMainStoryboardFile](https://developer.apple.com/documentation/bundleresources/information_property_list/nsmainstoryboardfile)
// key in the `Info.plist` file to the value of this build setting.

INFOPLIST_KEY_NSMainStoryboardFile = Main



// Principal Class
// 
// When `GENERATE_INFOPLIST_FILE` is enabled, sets the value of the
// [NSPrincipalClass](https://developer.apple.com/documentation/bundleresources/information_property_list/nsprincipalclass)
// key in the `Info.plist` file to the value of this build setting.

INFOPLIST_KEY_NSPrincipalClass = NSApplication



// Runpath Search Paths
// 
// This is a list of paths to be added to the `runpath` search path list for the image
// being created. At runtime, `dyld` uses the `runpath` when searching for dylibs whose
// load path begins with `@rpath/`. See [Dynamic Library Programming
// Topics](https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/DynamicLibraries/000-Introduction/Introduction.html).

LD_RUNPATH_SEARCH_PATHS = $(inherited) @executable_path/../Frameworks



// macOS Deployment Target
// 
// Code will load on this and later versions of macOS. Framework APIs that are
// unavailable in earlier versions will be weak-linked; your code should check for `null`
// function pointers or specific system versions before calling newer APIs.

MACOSX_DEPLOYMENT_TARGET = 12.0



// Marketing Version
// 
// This setting defines the user-visible version of the project.
// 
// When `GENERATE_INFOPLIST_FILE` is enabled, sets the value of the
// [CFBundleShortVersionString](https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundleshortversionstring)
// key in the `Info.plist` file to the value of this build setting.

MARKETING_VERSION = 1.0



// Product Bundle Identifier
// 
// A string that uniquely identifies the bundle. The string should be in reverse DNS
// format using only alphanumeric characters (`A-Z`, `a-z`, `0-9`), the dot (`.`), and
// the hyphen (`-`).
// 
// When `GENERATE_INFOPLIST_FILE` is enabled, sets the value of the
// [CFBundleIdentifier](https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundleidentifier)
// key in the `Info.plist` file to the value of this build setting.

PRODUCT_BUNDLE_IDENTIFIER = org.appel-rockhold.Georg



// Product Name
// 
// This is the basename of the product generated by the target.
// 
// When `GENERATE_INFOPLIST_FILE` is enabled, sets the value of the
// [CFBundleName](https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundlename)
// key in the `Info.plist` file to the value of this build setting.

PRODUCT_NAME = $(TARGET_NAME)



// Use Compiler to Extract Swift Strings
// 
// When enabled, the Swift compiler will be used to extract Swift string literal and
// interpolation `LocalizedStringKey` and `LocalizationKey` types during localization
// export.

SWIFT_EMIT_LOC_STRINGS = YES



// Swift Language Version
// 
// The language version used to compile the target's Swift code.

SWIFT_VERSION = 5.0



// Other Warning Flags
// 
// Space-separated list of additional warning flags to pass to the compiler. Use this
// setting if Xcode does not already provide UI for a particular compiler warning flag.

WARNING_CFLAGS = -Wdeprecated-declarations